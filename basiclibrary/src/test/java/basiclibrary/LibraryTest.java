/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.*;

public class LibraryTest {

    @Test public void testSomeLibraryMethod() {
        Library classUnderTest = new Library();
        assertTrue("someLibraryMethod should return 'true'", classUnderTest.someLibraryMethod());
    }

    @Test public void testArrayDiceRolls() {
        int[] arr = new int[4];
        int size = arr.length;
        assertEquals(
                "Expected an array of length 4",
                size,
                Library.roll(4).length);
    }

    @Test public void testIfTrue() {
        assertEquals(
                "Expected true as the answer",
                true,
                Library.duplicates(new int[] {3, 4, 1, 3})
        );
    }

    @Test public void testAverage() {
        assertEquals(
                "Should return 3",
                3,
                Library.averages(new int[]{3, 5, 2, 2})
        );
    }

    @Test public void testNestedArrayAverage() {
        int[] goodAnswer = {1,1,1,3};
        int[][] origArr = {
                {1,2,3,4},
                {1,1,1,3},
                {3,2,1,1},
                {3,2,1,4}
        };
        assertArrayEquals(
                "The subarray with the lowest average should return as [1,1,1,3].",
                goodAnswer,
                Library.nestedAverages(origArr)
        );
    }
    @Test public void testOctoberWeather() {
        int[][] weatherArr = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        assertEquals(
                "A string that contains high and low temps and values not seen for the month",
                "High: 72\n" +
                        "Low: 51\n" +
                        "Never saw temperature: 63\n" +
                        "Never saw temperature: 67\n" +
                        "Never saw temperature: 68\n" +
                        "Never saw temperature: 69\n",
                Library.octoberWeather(weatherArr)
        );
    }


    /*
    List<String> votes = new ArrayList<>();
votes.add("Bush");
votes.add("Bush");
votes.add("Bush");
votes.add("Shrub");
votes.add("Hedge");
votes.add("Shrub");
votes.add("Bush");
votes.add("Hedge");
votes.add("Bush");

String winner = tally(votes);
System.out.println(winner + " received the most votes!");
    */

    // Test for Tallying Election
    @Test public void testTallyingElection() {
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");
        assertEquals(
                "A string that says who got the most votes",
                "Bush",
                Library.tallyingVotes(votes)
        );
    }
}
