/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package basiclibrary;


import java.util.Random;
import java.util.Arrays;

public class Library {

    public boolean someLibraryMethod() {
        return true;
    }

    // range of a number resourced from
    public static int[] roll(int n){
        Random rand = new Random();
        int max = 6;
        int min = 0;
        int[] diceRolls = new int[n];

        for ( int i = 0; i < n; i++){
              int randyNum = rand.nextInt((max - min) + 1);
              diceRolls[i] = randyNum;
        }
        //System.out.println(Arrays.toString(diceRolls));
        return diceRolls;
    }

    // check for duplicates
    public static boolean duplicates(int[] checker){
        for ( int i = 0; i < checker.length; i++){
            for (int j = i+1; j < checker.length; j++){
                if(checker[i] == checker[j]){
                    return true;
                }
            }
        }
        return false;
    }

    // get the average
    public static int averages(int[] arr){
        int summed = 0;
        int arrLength = arr.length;
        for (int i = 0; i < arr.length; i++){
            summed += arr[i];
        }
        return summed/arrLength;
    }

    // Array of Arrays - get the array with the lowest average
    public static int[] nestedAverages(int[][] arrOfArrays){
        int lowestAverage = 0;
        int indexOfArraywithLowestAverage = 0

        int[] currAverageArr = new int[arrOfArrays.length];

        for(int i = 0; i < arrOfArrays.length; i++){

            for(int j = 0; j < arrOfArrays[i].length; j++){
                int currAverage = 0;
                currAverage += arrOfArrays[i][j];

                if (currAverage < lowestAverage) {
                    lowestAverage = currAverage;
                    currAverageArr[j] = arrOfArrays[i][j];
                }
            }
        }
        return currAverageArr;
    }
}
